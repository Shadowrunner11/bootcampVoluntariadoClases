{"mappings":"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","sources":["node_modules/mermaid/src/diagrams/state/id-cache.js","node_modules/mermaid/src/diagrams/state/shapes.js","node_modules/mermaid/src/diagrams/state/stateRenderer.js","node_modules/mermaid/src/diagrams/state/stateDiagram.ts","node_modules/lodash-es/_getPrototype.js","node_modules/lodash-es/isPlainObject.js"],"sourcesContent":["const idCache = {};\n\nexport const set = (key, val) => {\n  idCache[key] = val;\n};\n\nexport const get = (k) => idCache[k];\nexport const keys = () => Object.keys(idCache);\nexport const size = () => keys().length;\n\nexport default {\n  get,\n  set,\n  keys,\n  size,\n};\n","import { line, curveBasis } from 'd3';\nimport idCache from './id-cache.js';\nimport stateDb from './stateDb';\nimport utils from '../../utils';\nimport common from '../common/common';\nimport { getConfig } from '../../config';\nimport { log } from '../../logger';\n\n/**\n * Draws a start state as a black circle\n *\n * @param {any} g\n */\nexport const drawStartState = (g) =>\n  g\n    .append('circle')\n    // .style('stroke', 'black')\n    // .style('fill', 'black')\n    .attr('class', 'start-state')\n    .attr('r', getConfig().state.sizeUnit)\n    .attr('cx', getConfig().state.padding + getConfig().state.sizeUnit)\n    .attr('cy', getConfig().state.padding + getConfig().state.sizeUnit);\n\n/**\n * Draws a start state as a black circle\n *\n * @param {any} g\n */\nexport const drawDivider = (g) =>\n  g\n    .append('line')\n    .style('stroke', 'grey')\n    .style('stroke-dasharray', '3')\n    .attr('x1', getConfig().state.textHeight)\n    .attr('class', 'divider')\n    .attr('x2', getConfig().state.textHeight * 2)\n    .attr('y1', 0)\n    .attr('y2', 0);\n\n/**\n * Draws a an end state as a black circle\n *\n * @param {any} g\n * @param {any} stateDef\n */\nexport const drawSimpleState = (g, stateDef) => {\n  const state = g\n    .append('text')\n    .attr('x', 2 * getConfig().state.padding)\n    .attr('y', getConfig().state.textHeight + 2 * getConfig().state.padding)\n    .attr('font-size', getConfig().state.fontSize)\n    .attr('class', 'state-title')\n    .text(stateDef.id);\n\n  const classBox = state.node().getBBox();\n  g.insert('rect', ':first-child')\n    .attr('x', getConfig().state.padding)\n    .attr('y', getConfig().state.padding)\n    .attr('width', classBox.width + 2 * getConfig().state.padding)\n    .attr('height', classBox.height + 2 * getConfig().state.padding)\n    .attr('rx', getConfig().state.radius);\n\n  return state;\n};\n\n/**\n * Draws a state with descriptions\n *\n * @param {any} g The d3 svg object to add the state to\n * @param {any} stateDef\n * @returns {any} The d3 svg state\n */\nexport const drawDescrState = (g, stateDef) => {\n  const addTspan = function (textEl, txt, isFirst) {\n    const tSpan = textEl\n      .append('tspan')\n      .attr('x', 2 * getConfig().state.padding)\n      .text(txt);\n    if (!isFirst) {\n      tSpan.attr('dy', getConfig().state.textHeight);\n    }\n  };\n  const title = g\n    .append('text')\n    .attr('x', 2 * getConfig().state.padding)\n    .attr('y', getConfig().state.textHeight + 1.3 * getConfig().state.padding)\n    .attr('font-size', getConfig().state.fontSize)\n    .attr('class', 'state-title')\n    .text(stateDef.descriptions[0]);\n\n  const titleBox = title.node().getBBox();\n  const titleHeight = titleBox.height;\n\n  const description = g\n    .append('text') // text label for the x axis\n    .attr('x', getConfig().state.padding)\n    .attr(\n      'y',\n      titleHeight +\n        getConfig().state.padding * 0.4 +\n        getConfig().state.dividerMargin +\n        getConfig().state.textHeight\n    )\n    .attr('class', 'state-description');\n\n  let isFirst = true;\n  let isSecond = true;\n  stateDef.descriptions.forEach(function (descr) {\n    if (!isFirst) {\n      addTspan(description, descr, isSecond);\n      isSecond = false;\n    }\n    isFirst = false;\n  });\n\n  const descrLine = g\n    .append('line') // text label for the x axis\n    .attr('x1', getConfig().state.padding)\n    .attr('y1', getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2)\n    .attr('y2', getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2)\n    .attr('class', 'descr-divider');\n  const descrBox = description.node().getBBox();\n  const width = Math.max(descrBox.width, titleBox.width);\n\n  descrLine.attr('x2', width + 3 * getConfig().state.padding);\n  // const classBox = title.node().getBBox();\n\n  g.insert('rect', ':first-child')\n    .attr('x', getConfig().state.padding)\n    .attr('y', getConfig().state.padding)\n    .attr('width', width + 2 * getConfig().state.padding)\n    .attr('height', descrBox.height + titleHeight + 2 * getConfig().state.padding)\n    .attr('rx', getConfig().state.radius);\n\n  return g;\n};\n\n/** Adds the creates a box around the existing content and adds a panel for the id on top of the content. */\n/**\n * Function that creates an title row and a frame around a substate for a composite state diagram.\n * The function returns a new d3 svg object with updated width and height properties;\n *\n * @param {any} g The d3 svg object for the substate to framed\n * @param {any} stateDef The info about the\n * @param {any} altBkg\n */\nexport const addTitleAndBox = (g, stateDef, altBkg) => {\n  const pad = getConfig().state.padding;\n  const dblPad = 2 * getConfig().state.padding;\n  const orgBox = g.node().getBBox();\n  const orgWidth = orgBox.width;\n  const orgX = orgBox.x;\n\n  const title = g\n    .append('text')\n    .attr('x', 0)\n    .attr('y', getConfig().state.titleShift)\n    .attr('font-size', getConfig().state.fontSize)\n    .attr('class', 'state-title')\n    .text(stateDef.id);\n\n  const titleBox = title.node().getBBox();\n  const titleWidth = titleBox.width + dblPad;\n  let width = Math.max(titleWidth, orgWidth); // + dblPad;\n  if (width === orgWidth) {\n    width = width + dblPad;\n  }\n  let startX;\n  // const lineY = 1 - getConfig().state.textHeight;\n  // const descrLine = g\n  //   .append('line') // text label for the x axis\n  //   .attr('x1', 0)\n  //   .attr('y1', lineY)\n  //   .attr('y2', lineY)\n  //   .attr('class', 'descr-divider');\n\n  const graphBox = g.node().getBBox();\n  // descrLine.attr('x2', graphBox.width + getConfig().state.padding);\n\n  if (stateDef.doc) {\n    // console.warn(\n    //   stateDef.id,\n    //   'orgX: ',\n    //   orgX,\n    //   'width: ',\n    //   width,\n    //   'titleWidth: ',\n    //   titleWidth,\n    //   'orgWidth: ',\n    //   orgWidth,\n    //   'width',\n    //   width\n    // );\n  }\n\n  startX = orgX - pad;\n  if (titleWidth > orgWidth) {\n    startX = (orgWidth - width) / 2 + pad;\n  }\n  if (Math.abs(orgX - graphBox.x) < pad && titleWidth > orgWidth) {\n    startX = orgX - (titleWidth - orgWidth) / 2;\n  }\n\n  const lineY = 1 - getConfig().state.textHeight;\n  // White color\n  g.insert('rect', ':first-child')\n    .attr('x', startX)\n    .attr('y', lineY)\n    .attr('class', altBkg ? 'alt-composit' : 'composit')\n    .attr('width', width)\n    .attr(\n      'height',\n      graphBox.height + getConfig().state.textHeight + getConfig().state.titleShift + 1\n    )\n    .attr('rx', '0');\n\n  title.attr('x', startX + pad);\n  if (titleWidth <= orgWidth) {\n    title.attr('x', orgX + (width - dblPad) / 2 - titleWidth / 2 + pad);\n  }\n\n  // Title background\n  g.insert('rect', ':first-child')\n    .attr('x', startX)\n    .attr(\n      'y',\n      getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n    )\n    .attr('width', width)\n    // Just needs to be higher then the descr line, will be clipped by the white color box\n    .attr('height', getConfig().state.textHeight * 3)\n    .attr('rx', getConfig().state.radius);\n\n  // Full background\n  g.insert('rect', ':first-child')\n    .attr('x', startX)\n    .attr(\n      'y',\n      getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n    )\n    .attr('width', width)\n    .attr('height', graphBox.height + 3 + 2 * getConfig().state.textHeight)\n    .attr('rx', getConfig().state.radius);\n\n  return g;\n};\n\nconst drawEndState = (g) => {\n  g.append('circle')\n    // .style('stroke', 'black')\n    // .style('fill', 'white')\n    .attr('class', 'end-state-outer')\n    .attr('r', getConfig().state.sizeUnit + getConfig().state.miniPadding)\n    .attr(\n      'cx',\n      getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n    )\n    .attr(\n      'cy',\n      getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n    );\n\n  return (\n    g\n      .append('circle')\n      // .style('stroke', 'black')\n      // .style('fill', 'black')\n      .attr('class', 'end-state-inner')\n      .attr('r', getConfig().state.sizeUnit)\n      .attr('cx', getConfig().state.padding + getConfig().state.sizeUnit + 2)\n      .attr('cy', getConfig().state.padding + getConfig().state.sizeUnit + 2)\n  );\n};\nconst drawForkJoinState = (g, stateDef) => {\n  let width = getConfig().state.forkWidth;\n  let height = getConfig().state.forkHeight;\n\n  if (stateDef.parentId) {\n    let tmp = width;\n    width = height;\n    height = tmp;\n  }\n  return g\n    .append('rect')\n    .style('stroke', 'black')\n    .style('fill', 'black')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('x', getConfig().state.padding)\n    .attr('y', getConfig().state.padding);\n};\n\nexport const drawText = function (elem, textData) {\n  // Remove and ignore br:s\n  const nText = textData.text.replace(common.lineBreakRegex, ' ');\n\n  const textElem = elem.append('text');\n  textElem.attr('x', textData.x);\n  textElem.attr('y', textData.y);\n  textElem.style('text-anchor', textData.anchor);\n  textElem.attr('fill', textData.fill);\n  if (textData.class !== undefined) {\n    textElem.attr('class', textData.class);\n  }\n\n  const span = textElem.append('tspan');\n  span.attr('x', textData.x + textData.textMargin * 2);\n  span.attr('fill', textData.fill);\n  span.text(nText);\n\n  return textElem;\n};\n\nconst _drawLongText = (_text, x, y, g) => {\n  let textHeight = 0;\n\n  const textElem = g.append('text');\n  textElem.style('text-anchor', 'start');\n  textElem.attr('class', 'noteText');\n\n  let text = _text.replace(/\\r\\n/g, '<br/>');\n  text = text.replace(/\\n/g, '<br/>');\n  const lines = text.split(common.lineBreakRegex);\n\n  let tHeight = 1.25 * getConfig().state.noteMargin;\n  for (const line of lines) {\n    const txt = line.trim();\n\n    if (txt.length > 0) {\n      const span = textElem.append('tspan');\n      span.text(txt);\n      if (tHeight === 0) {\n        const textBounds = span.node().getBBox();\n        tHeight += textBounds.height;\n      }\n      textHeight += tHeight;\n      span.attr('x', x + getConfig().state.noteMargin);\n      span.attr('y', y + textHeight + 1.25 * getConfig().state.noteMargin);\n    }\n  }\n  return { textWidth: textElem.node().getBBox().width, textHeight };\n};\n\n/**\n * Draws a note to the diagram\n *\n * @param text - The text of the given note.\n * @param g - The element the note is attached to.\n */\n\nexport const drawNote = (text, g) => {\n  g.attr('class', 'state-note');\n  const note = g.append('rect').attr('x', 0).attr('y', getConfig().state.padding);\n  const rectElem = g.append('g');\n\n  const { textWidth, textHeight } = _drawLongText(text, 0, 0, rectElem);\n  note.attr('height', textHeight + 2 * getConfig().state.noteMargin);\n  note.attr('width', textWidth + getConfig().state.noteMargin * 2);\n\n  return note;\n};\n\n/**\n * Starting point for drawing a state. The function finds out the specifics about the state and\n * renders with appropriate function.\n *\n * @param {any} elem\n * @param {any} stateDef\n */\n\nexport const drawState = function (elem, stateDef) {\n  const id = stateDef.id;\n  const stateInfo = {\n    id: id,\n    label: stateDef.id,\n    width: 0,\n    height: 0,\n  };\n\n  const g = elem.append('g').attr('id', id).attr('class', 'stateGroup');\n\n  if (stateDef.type === 'start') {\n    drawStartState(g);\n  }\n  if (stateDef.type === 'end') {\n    drawEndState(g);\n  }\n  if (stateDef.type === 'fork' || stateDef.type === 'join') {\n    drawForkJoinState(g, stateDef);\n  }\n  if (stateDef.type === 'note') {\n    drawNote(stateDef.note.text, g);\n  }\n  if (stateDef.type === 'divider') {\n    drawDivider(g);\n  }\n  if (stateDef.type === 'default' && stateDef.descriptions.length === 0) {\n    drawSimpleState(g, stateDef);\n  }\n  if (stateDef.type === 'default' && stateDef.descriptions.length > 0) {\n    drawDescrState(g, stateDef);\n  }\n\n  const stateBox = g.node().getBBox();\n  stateInfo.width = stateBox.width + 2 * getConfig().state.padding;\n  stateInfo.height = stateBox.height + 2 * getConfig().state.padding;\n\n  idCache.set(id, stateInfo);\n  // stateCnt++;\n  return stateInfo;\n};\n\nlet edgeCount = 0;\nexport const drawEdge = function (elem, path, relation) {\n  const getRelationType = function (type) {\n    switch (type) {\n      case stateDb.relationType.AGGREGATION:\n        return 'aggregation';\n      case stateDb.relationType.EXTENSION:\n        return 'extension';\n      case stateDb.relationType.COMPOSITION:\n        return 'composition';\n      case stateDb.relationType.DEPENDENCY:\n        return 'dependency';\n    }\n  };\n\n  path.points = path.points.filter((p) => !Number.isNaN(p.y));\n\n  // The data for our line\n  const lineData = path.points;\n\n  // This is the accessor function we talked about above\n  const lineFunction = line()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    })\n    .curve(curveBasis);\n\n  const svgPath = elem\n    .append('path')\n    .attr('d', lineFunction(lineData))\n    .attr('id', 'edge' + edgeCount)\n    .attr('class', 'transition');\n  let url = '';\n  if (getConfig().state.arrowMarkerAbsolute) {\n    url =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname +\n      window.location.search;\n    url = url.replace(/\\(/g, '\\\\(');\n    url = url.replace(/\\)/g, '\\\\)');\n  }\n\n  svgPath.attr(\n    'marker-end',\n    'url(' + url + '#' + getRelationType(stateDb.relationType.DEPENDENCY) + 'End' + ')'\n  );\n\n  if (relation.title !== undefined) {\n    const label = elem.append('g').attr('class', 'stateLabel');\n\n    const { x, y } = utils.calcLabelPosition(path.points);\n\n    const rows = common.getRows(relation.title);\n\n    let titleHeight = 0;\n    const titleRows = [];\n    let maxWidth = 0;\n    let minX = 0;\n\n    for (let i = 0; i <= rows.length; i++) {\n      const title = label\n        .append('text')\n        .attr('text-anchor', 'middle')\n        .text(rows[i])\n        .attr('x', x)\n        .attr('y', y + titleHeight);\n\n      const boundstmp = title.node().getBBox();\n      maxWidth = Math.max(maxWidth, boundstmp.width);\n      minX = Math.min(minX, boundstmp.x);\n\n      log.info(boundstmp.x, x, y + titleHeight);\n\n      if (titleHeight === 0) {\n        const titleBox = title.node().getBBox();\n        titleHeight = titleBox.height;\n        log.info('Title height', titleHeight, y);\n      }\n      titleRows.push(title);\n    }\n\n    let boxHeight = titleHeight * rows.length;\n    if (rows.length > 1) {\n      const heightAdj = (rows.length - 1) * titleHeight * 0.5;\n\n      titleRows.forEach((title, i) => title.attr('y', y + i * titleHeight - heightAdj));\n      boxHeight = titleHeight * rows.length;\n    }\n\n    const bounds = label.node().getBBox();\n\n    label\n      .insert('rect', ':first-child')\n      .attr('class', 'box')\n      .attr('x', x - maxWidth / 2 - getConfig().state.padding / 2)\n      .attr('y', y - boxHeight / 2 - getConfig().state.padding / 2 - 3.5)\n      .attr('width', maxWidth + getConfig().state.padding)\n      .attr('height', boxHeight + getConfig().state.padding);\n\n    log.info(bounds);\n\n    //label.attr('transform', '0 -' + (bounds.y / 2));\n\n    // Debug points\n    // path.points.forEach(point => {\n    //   g.append('circle')\n    //     .style('stroke', 'red')\n    //     .style('fill', 'red')\n    //     .attr('r', 1)\n    //     .attr('cx', point.x)\n    //     .attr('cy', point.y);\n    // });\n    // g.append('circle')\n    //   .style('stroke', 'blue')\n    //   .style('fill', 'blue')\n    //   .attr('r', 1)\n    //   .attr('cx', x)\n    //   .attr('cy', y);\n  }\n\n  edgeCount++;\n};\n","import { select } from 'd3';\nimport { layout as dagreLayout } from 'dagre-d3-es/src/dagre/index.js';\nimport * as graphlib from 'dagre-d3-es/src/graphlib/index.js';\nimport { log } from '../../logger';\nimport common from '../common/common';\nimport { drawState, addTitleAndBox, drawEdge } from './shapes';\nimport { getConfig } from '../../config';\nimport { configureSvgSize } from '../../setupGraphViewbox';\n\n// TODO Move conf object to main conf in mermaidAPI\nlet conf;\n\nconst transformationLog = {};\n\nexport const setConf = function () {\n  //no-op\n};\n\n/**\n * Setup arrow head and define the marker. The result is appended to the svg.\n *\n * @param {any} elem\n */\nconst insertMarkers = function (elem) {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', 'dependencyEnd')\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 19,7 L9,13 L14,7 L9,1 Z');\n};\n\n/**\n * Draws a flowchart in the tag with id: id based on the graph definition in text.\n *\n * @param {any} text\n * @param {any} id\n * @param _version\n * @param diagObj\n */\nexport const draw = function (text, id, _version, diagObj) {\n  conf = getConfig().state;\n  const securityLevel = getConfig().securityLevel;\n  // Handle root and Document for when rendering in sandbox mode\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n\n  // diagObj.db.clear();\n  // parser.parse(text);\n  log.debug('Rendering diagram ' + text);\n\n  // Fetch the default direction, use TD if none was found\n  const diagram = root.select(`[id='${id}']`);\n  insertMarkers(diagram);\n\n  // Layout graph, Create a new directed graph\n  const graph = new graphlib.Graph({\n    multigraph: true,\n    compound: true,\n    // acyclicer: 'greedy',\n    rankdir: 'RL',\n    // ranksep: '20'\n  });\n\n  // Default to assigning a new object as a label for each new edge.\n  graph.setDefaultEdgeLabel(function () {\n    return {};\n  });\n\n  const rootDoc = diagObj.db.getRootDoc();\n  renderDoc(rootDoc, diagram, undefined, false, root, doc, diagObj);\n\n  const padding = conf.padding;\n  const bounds = diagram.node().getBBox();\n\n  const width = bounds.width + padding * 2;\n  const height = bounds.height + padding * 2;\n\n  // zoom in a bit\n  const svgWidth = width * 1.75;\n  configureSvgSize(diagram, height, svgWidth, conf.useMaxWidth);\n\n  diagram.attr(\n    'viewBox',\n    `${bounds.x - conf.padding}  ${bounds.y - conf.padding} ` + width + ' ' + height\n  );\n};\nconst getLabelWidth = (text) => {\n  return text ? text.length * conf.fontSizeFactor : 1;\n};\n\nconst renderDoc = (doc, diagram, parentId, altBkg, root, domDocument, diagObj) => {\n  // Layout graph, Create a new directed graph\n  const graph = new graphlib.Graph({\n    compound: true,\n    multigraph: true,\n  });\n\n  let i;\n  let edgeFreeDoc = true;\n  for (i = 0; i < doc.length; i++) {\n    if (doc[i].stmt === 'relation') {\n      edgeFreeDoc = false;\n      break;\n    }\n  }\n\n  // Set an object for the graph label\n  if (parentId) {\n    graph.setGraph({\n      rankdir: 'LR',\n      multigraph: true,\n      compound: true,\n      // acyclicer: 'greedy',\n      ranker: 'tight-tree',\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      isMultiGraph: true,\n      // ranksep: 5,\n      // nodesep: 1\n    });\n  } else {\n    graph.setGraph({\n      rankdir: 'TB',\n      multigraph: true,\n      compound: true,\n      // isCompound: true,\n      // acyclicer: 'greedy',\n      // ranker: 'longest-path'\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      ranker: 'tight-tree',\n      // ranker: 'network-simplex'\n      isMultiGraph: true,\n    });\n  }\n\n  // Default to assigning a new object as a label for each new edge.\n  graph.setDefaultEdgeLabel(function () {\n    return {};\n  });\n\n  diagObj.db.extract(doc);\n  const states = diagObj.db.getStates();\n  const relations = diagObj.db.getRelations();\n\n  const keys = Object.keys(states);\n\n  let first = true;\n\n  for (const key of keys) {\n    const stateDef = states[key];\n\n    if (parentId) {\n      stateDef.parentId = parentId;\n    }\n\n    let node;\n    if (stateDef.doc) {\n      let sub = diagram.append('g').attr('id', stateDef.id).attr('class', 'stateGroup');\n      node = renderDoc(stateDef.doc, sub, stateDef.id, !altBkg, root, domDocument, diagObj);\n\n      if (first) {\n        // first = false;\n        sub = addTitleAndBox(sub, stateDef, altBkg);\n        let boxBounds = sub.node().getBBox();\n        node.width = boxBounds.width;\n        node.height = boxBounds.height + conf.padding / 2;\n        transformationLog[stateDef.id] = { y: conf.compositTitleSize };\n      } else {\n        // sub = addIdAndBox(sub, stateDef);\n        let boxBounds = sub.node().getBBox();\n        node.width = boxBounds.width;\n        node.height = boxBounds.height;\n        // transformationLog[stateDef.id] = { y: conf.compositTitleSize };\n      }\n    } else {\n      node = drawState(diagram, stateDef, graph);\n    }\n\n    if (stateDef.note) {\n      // Draw note note\n      const noteDef = {\n        descriptions: [],\n        id: stateDef.id + '-note',\n        note: stateDef.note,\n        type: 'note',\n      };\n      const note = drawState(diagram, noteDef, graph);\n\n      // graph.setNode(node.id, node);\n      if (stateDef.note.position === 'left of') {\n        graph.setNode(node.id + '-note', note);\n        graph.setNode(node.id, node);\n      } else {\n        graph.setNode(node.id, node);\n        graph.setNode(node.id + '-note', note);\n      }\n      // graph.setNode(node.id);\n      graph.setParent(node.id, node.id + '-group');\n      graph.setParent(node.id + '-note', node.id + '-group');\n    } else {\n      // Add nodes to the graph. The first argument is the node id. The second is\n      // metadata about the node. In this case we're going to add labels to each of\n      // our nodes.\n      graph.setNode(node.id, node);\n    }\n  }\n\n  log.debug('Count=', graph.nodeCount(), graph);\n  let cnt = 0;\n  relations.forEach(function (relation) {\n    cnt++;\n    log.debug('Setting edge', relation);\n    graph.setEdge(\n      relation.id1,\n      relation.id2,\n      {\n        relation: relation,\n        width: getLabelWidth(relation.title),\n        height: conf.labelHeight * common.getRows(relation.title).length,\n        labelpos: 'c',\n      },\n      'id' + cnt\n    );\n  });\n\n  dagreLayout(graph);\n\n  log.debug('Graph after layout', graph.nodes());\n  const svgElem = diagram.node();\n\n  graph.nodes().forEach(function (v) {\n    if (v !== undefined && graph.node(v) !== undefined) {\n      log.warn('Node ' + v + ': ' + JSON.stringify(graph.node(v)));\n      root\n        .select('#' + svgElem.id + ' #' + v)\n        .attr(\n          'transform',\n          'translate(' +\n            (graph.node(v).x - graph.node(v).width / 2) +\n            ',' +\n            (graph.node(v).y +\n              (transformationLog[v] ? transformationLog[v].y : 0) -\n              graph.node(v).height / 2) +\n            ' )'\n        );\n      root\n        .select('#' + svgElem.id + ' #' + v)\n        .attr('data-x-shift', graph.node(v).x - graph.node(v).width / 2);\n      const dividers = domDocument.querySelectorAll('#' + svgElem.id + ' #' + v + ' .divider');\n      dividers.forEach((divider) => {\n        const parent = divider.parentElement;\n        let pWidth = 0;\n        let pShift = 0;\n        if (parent) {\n          if (parent.parentElement) {\n            pWidth = parent.parentElement.getBBox().width;\n          }\n          pShift = parseInt(parent.getAttribute('data-x-shift'), 10);\n          if (Number.isNaN(pShift)) {\n            pShift = 0;\n          }\n        }\n        divider.setAttribute('x1', 0 - pShift + 8);\n        divider.setAttribute('x2', pWidth - pShift - 8);\n      });\n    } else {\n      log.debug('No Node ' + v + ': ' + JSON.stringify(graph.node(v)));\n    }\n  });\n\n  let stateBox = svgElem.getBBox();\n\n  graph.edges().forEach(function (e) {\n    if (e !== undefined && graph.edge(e) !== undefined) {\n      log.debug('Edge ' + e.v + ' -> ' + e.w + ': ' + JSON.stringify(graph.edge(e)));\n      drawEdge(diagram, graph.edge(e), graph.edge(e).relation);\n    }\n  });\n\n  stateBox = svgElem.getBBox();\n\n  const stateInfo = {\n    id: parentId ? parentId : 'root',\n    label: parentId ? parentId : 'root',\n    width: 0,\n    height: 0,\n  };\n\n  stateInfo.width = stateBox.width + 2 * conf.padding;\n  stateInfo.height = stateBox.height + 2 * conf.padding;\n\n  log.debug('Doc rendered', stateInfo, graph);\n  return stateInfo;\n};\n\nexport default {\n  setConf,\n  draw,\n};\n","import { DiagramDefinition } from '../../diagram-api/types';\n// @ts-ignore: TODO Fix ts errors\nimport parser from './parser/stateDiagram';\nimport db from './stateDb';\nimport styles from './styles';\nimport renderer from './stateRenderer';\n\nexport const diagram: DiagramDefinition = {\n  parser,\n  db,\n  renderer,\n  styles,\n  init: (cnf) => {\n    if (!cnf.state) {\n      cnf.state = {};\n    }\n    cnf.state.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    db.clear();\n  },\n};\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n"],"names":["$2d45b00d0af4b699$var$idCache","$2d45b00d0af4b699$var$idCache$1","key","val","$2d45b00d0af4b699$var$drawDescrState","g","stateDef","titleBox","append","attr","$jmbVX","state","padding","textHeight","fontSize","text","descriptions","node","getBBox","titleHeight","height","description","dividerMargin","isFirst","isSecond","forEach","descr","textEl","txt","tSpan","addTspan","descrLine","descrBox","width","Math","max","insert","radius","$2d45b00d0af4b699$var$addTitleAndBox","altBkg","pad","dblPad","orgBox","orgWidth","orgX","x","title","titleShift","id","titleWidth","startX","graphBox","doc","abs","lineY","$2d45b00d0af4b699$var$drawNote","note","rectElem","textWidth","_text","y","textElem","style","replace","lines","split","e","lineBreakRegex","tHeight","noteMargin","line","trim","length","span","$2d45b00d0af4b699$var$_drawLongText","$2d45b00d0af4b699$var$drawState","elem","stateInfo","label","type","sizeUnit","$2d45b00d0af4b699$var$drawStartState","miniPadding","$2d45b00d0af4b699$var$drawEndState","forkWidth","forkHeight","parentId","tmp","$2d45b00d0af4b699$var$drawForkJoinState","$2d45b00d0af4b699$var$drawDivider","classBox","$2d45b00d0af4b699$var$drawSimpleState","stateBox","idCache","$2d45b00d0af4b699$var$edgeCount","$2d45b00d0af4b699$var$conf","$2d45b00d0af4b699$var$transformationLog","$2d45b00d0af4b699$var$renderDoc","diagram","root","domDocument","diagObj","graph","$4LkSm","Graph","compound","multigraph","i","edgeFreeDoc","stmt","setGraph","rankdir","ranker","ranksep","edgeLengthFactor","nodeSep","isMultiGraph","setDefaultEdgeLabel","db","extract","states","getStates","relations","getRelations","keys","Object","sub","boxBounds","compositTitleSize","noteDef","position","setNode","setParent","l","debug","nodeCount","cnt","relation","setEdge","id1","id2","fontSizeFactor","labelHeight","getRows","labelpos","dagreLayout","nodes","svgElem","v","warn","JSON","stringify","select","querySelectorAll","divider","parent","parentElement","pWidth","pShift","parseInt","getAttribute","Number","isNaN","setAttribute","edges","edge","w","path","points","filter","p","lineData","lineFunction","$2YFJl","d","curve","curveBasis","svgPath","url","arrowMarkerAbsolute","window","location","protocol","host","pathname","search","stateDb","relationType","AGGREGATION","EXTENSION","COMPOSITION","DEPENDENCY","getRelationType","$3IUvT","u","calcLabelPosition","rows","titleRows","maxWidth","minX","boundstmp","min","info","push","boxHeight","heightAdj","bounds","$2d45b00d0af4b699$var$drawEdge","$2d45b00d0af4b699$var$renderer","_version","securityLevel","sandboxElement","contentDocument","body","document","rootDoc","getRootDoc","svgWidth","k","useMaxWidth","$2d45b00d0af4b699$export$6118d022d940d562","$g56H2","s","init","cnf","clear","$86d5c19d81d423c4$export$2e2bcd8739ae039","parcelRequire","default","getPrototypeOf","$hArsG","$281ac82f5f5844b1$var$funcProto","Function","prototype","$281ac82f5f5844b1$var$objectProto","$281ac82f5f5844b1$var$funcToString","toString","$281ac82f5f5844b1$var$hasOwnProperty","hasOwnProperty","$281ac82f5f5844b1$var$objectCtorString","call","$281ac82f5f5844b1$export$2e2bcd8739ae039","value","$f2iog","proto","$bzIQZ","Ctor","constructor"],"version":3,"file":"stateDiagram-d53d2428.478dac38.js.map"}