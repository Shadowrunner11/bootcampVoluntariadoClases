{"mappings":"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","sources":["node_modules/mermaid/src/dagre-wrapper/markers.js","node_modules/mermaid/src/dagre-wrapper/createLabel.js","node_modules/mermaid/src/dagre-wrapper/shapes/util.js","node_modules/mermaid/src/dagre-wrapper/intersect/intersect-ellipse.js","node_modules/mermaid/src/dagre-wrapper/intersect/intersect-line.js","node_modules/mermaid/src/dagre-wrapper/intersect/intersect-rect.js","node_modules/mermaid/src/dagre-wrapper/intersect/index.js","node_modules/mermaid/src/dagre-wrapper/intersect/intersect-node.js","node_modules/mermaid/src/dagre-wrapper/intersect/intersect-circle.js","node_modules/mermaid/src/dagre-wrapper/intersect/intersect-polygon.js","node_modules/mermaid/src/dagre-wrapper/nodes.js","node_modules/mermaid/src/dagre-wrapper/shapes/note.js","node_modules/mermaid/src/dagre-wrapper/edges.js"],"sourcesContent":["/** Setup arrow head and define the marker. The result is appended to the svg. */\n\nimport { log } from '../logger';\n\n// Only add the number of markers that the diagram needs\nconst insertMarkers = (elem, markerArray, type, id) => {\n  markerArray.forEach((markerName) => {\n    markers[markerName](elem, type, id);\n  });\n};\n\nconst extension = (elem, type, id) => {\n  log.trace('Making markers for ', id);\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-extensionStart')\n    .attr('class', 'marker extension ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 1,7 L18,13 V 1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-extensionEnd')\n    .attr('class', 'marker extension ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 1,1 V 13 L18,7 Z'); // this is actual shape for arrowhead\n};\n\nconst composition = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-compositionStart')\n    .attr('class', 'marker composition ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-compositionEnd')\n    .attr('class', 'marker composition ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n};\nconst aggregation = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-aggregationStart')\n    .attr('class', 'marker aggregation ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-aggregationEnd')\n    .attr('class', 'marker aggregation ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n};\nconst dependency = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-dependencyStart')\n    .attr('class', 'marker dependency ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 5,7 L9,13 L1,7 L9,1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-dependencyEnd')\n    .attr('class', 'marker dependency ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L14,7 L9,1 Z');\n};\nconst lollipop = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-lollipopStart')\n    .attr('class', 'marker lollipop ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('circle')\n    .attr('stroke', 'black')\n    .attr('fill', 'white')\n    .attr('cx', 6)\n    .attr('cy', 7)\n    .attr('r', 6);\n};\nconst point = (elem, type) => {\n  elem\n    .append('marker')\n    .attr('id', type + '-pointEnd')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 12 20')\n    .attr('refX', 10)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 12)\n    .attr('markerHeight', 12)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 z')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  elem\n    .append('marker')\n    .attr('id', type + '-pointStart')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 0)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 12)\n    .attr('markerHeight', 12)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 0 5 L 10 10 L 10 0 z')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n};\nconst circle = (elem, type) => {\n  elem\n    .append('marker')\n    .attr('id', type + '-circleEnd')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 11)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('circle')\n    .attr('cx', '5')\n    .attr('cy', '5')\n    .attr('r', '5')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n\n  elem\n    .append('marker')\n    .attr('id', type + '-circleStart')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', -1)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('circle')\n    .attr('cx', '5')\n    .attr('cy', '5')\n    .attr('r', '5')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n};\nconst cross = (elem, type) => {\n  elem\n    .append('marker')\n    .attr('id', type + '-crossEnd')\n    .attr('class', 'marker cross ' + type)\n    .attr('viewBox', '0 0 11 11')\n    .attr('refX', 12)\n    .attr('refY', 5.2)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('path')\n    // .attr('stroke', 'black')\n    .attr('d', 'M 1,1 l 9,9 M 10,1 l -9,9')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 2)\n    .style('stroke-dasharray', '1,0');\n\n  elem\n    .append('marker')\n    .attr('id', type + '-crossStart')\n    .attr('class', 'marker cross ' + type)\n    .attr('viewBox', '0 0 11 11')\n    .attr('refX', -1)\n    .attr('refY', 5.2)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('path')\n    // .attr('stroke', 'black')\n    .attr('d', 'M 1,1 l 9,9 M 10,1 l -9,9')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 2)\n    .style('stroke-dasharray', '1,0');\n};\nconst barb = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-barbEnd')\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 14)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 19,7 L9,13 L14,7 L9,1 Z');\n};\n\n// TODO rename the class diagram markers to something shape descriptive and semantic free\nconst markers = {\n  extension,\n  composition,\n  aggregation,\n  dependency,\n  lollipop,\n  point,\n  circle,\n  cross,\n  barb,\n};\nexport default insertMarkers;\n","import { select } from 'd3';\nimport { log } from '../logger';\nimport { getConfig } from '../config';\nimport { evaluate } from '../diagrams/common/common';\nimport { decodeEntities } from '../mermaidAPI';\n\n/**\n * @param dom\n * @param styleFn\n */\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr('style', styleFn);\n  }\n}\n\n/**\n * @param {any} node\n * @returns {SVGForeignObjectElement} Node\n */\nfunction addHtmlLabel(node) {\n  const fo = select(document.createElementNS('http://www.w3.org/2000/svg', 'foreignObject'));\n  const div = fo.append('xhtml:div');\n\n  const label = node.label;\n  const labelClass = node.isNode ? 'nodeLabel' : 'edgeLabel';\n  div.html(\n    '<span class=\"' +\n      labelClass +\n      '\" ' +\n      (node.labelStyle ? 'style=\"' + node.labelStyle + '\"' : '') +\n      '>' +\n      label +\n      '</span>'\n  );\n\n  applyStyle(div, node.labelStyle);\n  div.style('display', 'inline-block');\n  // Fix for firefox\n  div.style('white-space', 'nowrap');\n  div.attr('xmlns', 'http://www.w3.org/1999/xhtml');\n  return fo.node();\n}\n/**\n * @param _vertexText\n * @param style\n * @param isTitle\n * @param isNode\n * @deprecated svg-util/createText instead\n */\nconst createLabel = (_vertexText, style, isTitle, isNode) => {\n  let vertexText = _vertexText || '';\n  if (typeof vertexText === 'object') {\n    vertexText = vertexText[0];\n  }\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    // TODO: addHtmlLabel accepts a labelStyle. Do we possibly have that?\n    vertexText = vertexText.replace(/\\\\n|\\n/g, '<br />');\n    log.info('vertexText' + vertexText);\n    const node = {\n      isNode,\n      label: decodeEntities(vertexText).replace(\n        /fa[blrs]?:fa-[\\w-]+/g,\n        (s) => `<i class='${s.replace(':', ' ')}'></i>`\n      ),\n      labelStyle: style.replace('fill:', 'color:'),\n    };\n    let vertexNode = addHtmlLabel(node);\n    // vertexNode.parentNode.removeChild(vertexNode);\n    return vertexNode;\n  } else {\n    const svgLabel = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n    svgLabel.setAttribute('style', style.replace('color:', 'fill:'));\n    let rows = [];\n    if (typeof vertexText === 'string') {\n      rows = vertexText.split(/\\\\n|\\n|<br\\s*\\/?>/gi);\n    } else if (Array.isArray(vertexText)) {\n      rows = vertexText;\n    } else {\n      rows = [];\n    }\n\n    for (const row of rows) {\n      const tspan = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n      tspan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n      tspan.setAttribute('dy', '1em');\n      tspan.setAttribute('x', '0');\n      if (isTitle) {\n        tspan.setAttribute('class', 'title-row');\n      } else {\n        tspan.setAttribute('class', 'row');\n      }\n      tspan.textContent = row.trim();\n      svgLabel.appendChild(tspan);\n    }\n    return svgLabel;\n  }\n};\n\nexport default createLabel;\n","import createLabel from '../createLabel';\nimport { createText } from '../../rendering-util/createText';\nimport { getConfig } from '../../config';\nimport { decodeEntities } from '../../mermaidAPI';\nimport { select } from 'd3';\nimport { evaluate, sanitizeText } from '../../diagrams/common/common';\nexport const labelHelper = (parent, node, _classes, isNode) => {\n  let classes;\n  const useHtmlLabels = node.useHtmlLabels || evaluate(getConfig().flowchart.htmlLabels);\n  if (!_classes) {\n    classes = 'node default';\n  } else {\n    classes = _classes;\n  }\n  // Add outer g element\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', classes)\n    .attr('id', node.domId || node.id);\n\n  // Create the label and insert it after the rect\n  const label = shapeSvg.insert('g').attr('class', 'label').attr('style', node.labelStyle);\n\n  // Replace labelText with default value if undefined\n  let labelText;\n  if (node.labelText === undefined) {\n    labelText = '';\n  } else {\n    labelText = typeof node.labelText === 'string' ? node.labelText : node.labelText[0];\n  }\n\n  const textNode = label.node();\n  let text;\n  if (node.labelType === 'markdown') {\n    // text = textNode;\n    text = createText(label, sanitizeText(decodeEntities(labelText), getConfig()), {\n      useHtmlLabels,\n      width: node.width || getConfig().flowchart.wrappingWidth,\n      classes: 'markdown-node-label',\n    });\n  } else {\n    text = textNode.appendChild(\n      createLabel(\n        sanitizeText(decodeEntities(labelText), getConfig()),\n        node.labelStyle,\n        false,\n        isNode\n      )\n    );\n  }\n\n  // Get the size of the label\n  let bbox = text.getBBox();\n\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n\n  const halfPadding = node.padding / 2;\n\n  // Center the label\n  if (useHtmlLabels) {\n    label.attr('transform', 'translate(' + -bbox.width / 2 + ', ' + -bbox.height / 2 + ')');\n  } else {\n    label.attr('transform', 'translate(' + 0 + ', ' + -bbox.height / 2 + ')');\n  }\n  if (node.centerLabel) {\n    label.attr('transform', 'translate(' + -bbox.width / 2 + ', ' + -bbox.height / 2 + ')');\n  }\n  label.insert('rect', ':first-child');\n  return { shapeSvg, bbox, halfPadding, label };\n};\n\nexport const updateNodeBounds = (node, element) => {\n  const bbox = element.node().getBBox();\n  node.width = bbox.width;\n  node.height = bbox.height;\n};\n\n/**\n * @param parent\n * @param w\n * @param h\n * @param points\n */\nexport function insertPolygonShape(parent, w, h, points) {\n  return parent\n    .insert('polygon', ':first-child')\n    .attr(\n      'points',\n      points\n        .map(function (d) {\n          return d.x + ',' + d.y;\n        })\n        .join(' ')\n    )\n    .attr('class', 'label-container')\n    .attr('transform', 'translate(' + -w / 2 + ',' + h / 2 + ')');\n}\n","/**\n * @param node\n * @param rx\n * @param ry\n * @param point\n */\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: https://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs((rx * ry * px) / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs((rx * ry * py) / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return { x: cx + dx, y: cy + dy };\n}\n\nexport default intersectEllipse;\n","/**\n * Returns the point at which two lines, p and q, intersect or returns undefined if they do not intersect.\n *\n * @param p1\n * @param p2\n * @param q1\n * @param q2\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2, r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = p2.x * p1.y - p1.x * p2.y;\n\n  // Compute r3 and r4.\n  r3 = a1 * q1.x + b1 * q1.y + c1;\n  r4 = a1 * q2.x + b1 * q2.y + c1;\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n    return /*DON'T_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = q2.x * q1.y - q1.x * q2.y;\n\n  // Compute r1 and r2\n  r1 = a2 * p1.x + b2 * p1.y + c2;\n  r2 = a2 * p2.x + b2 * p2.y + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\n    return /*DON'T_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = a1 * b2 - a2 * b1;\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = b1 * c2 - b2 * c1;\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  num = a2 * c1 - a1 * c2;\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  return { x: x, y: y };\n}\n\n/**\n * @param r1\n * @param r2\n */\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n\nexport default intersectLine;\n","const intersectRect = (node, point) => {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // https://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : (h * dx) / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : (w * dy) / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n};\n\nexport default intersectRect;\n","/*\n * Borrowed with love from from dagre-d3. Many thanks to cpettitt!\n */\n\nimport node from './intersect-node.js';\nimport circle from './intersect-circle.js';\nimport ellipse from './intersect-ellipse.js';\nimport polygon from './intersect-polygon.js';\nimport rect from './intersect-rect.js';\n\nexport default {\n  node,\n  circle,\n  ellipse,\n  polygon,\n  rect,\n};\n","/**\n * @param node\n * @param point\n */\nfunction intersectNode(node, point) {\n  // console.info('Intersect Node');\n  return node.intersect(point);\n}\n\nexport default intersectNode;\n","import intersectEllipse from './intersect-ellipse';\n\n/**\n * @param node\n * @param rx\n * @param point\n */\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n\nexport default intersectCircle;\n","/* eslint \"no-console\": off */\n\nimport intersectLine from './intersect-line';\n\nexport default intersectPolygon;\n\n/**\n * Returns the point ({x, y}) at which the point argument intersects with the node argument assuming\n * that it has the shape specified by polygon.\n *\n * @param node\n * @param polyPoints\n * @param point\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY;\n  var minY = Number.POSITIVE_INFINITY;\n  if (typeof polyPoints.forEach === 'function') {\n    polyPoints.forEach(function (entry) {\n      minX = Math.min(minX, entry.x);\n      minY = Math.min(minY, entry.y);\n    });\n  } else {\n    minX = Math.min(minX, polyPoints.x);\n    minY = Math.min(minY, polyPoints.y);\n  }\n\n  var left = x1 - node.width / 2 - minX;\n  var top = y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(\n      node,\n      point,\n      { x: left + p1.x, y: top + p1.y },\n      { x: left + p2.x, y: top + p2.y }\n    );\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    // console.log('NO INTERSECTION FOUND, RETURN NODE CENTER', node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function (p, q) {\n      var pdx = p.x - point.x;\n      var pdy = p.y - point.y;\n      var distp = Math.sqrt(pdx * pdx + pdy * pdy);\n\n      var qdx = q.x - point.x;\n      var qdy = q.y - point.y;\n      var distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return distp < distq ? -1 : distp === distq ? 0 : 1;\n    });\n  }\n  return intersections[0];\n}\n","import { select } from 'd3';\nimport { log } from '../logger';\nimport { labelHelper, updateNodeBounds, insertPolygonShape } from './shapes/util';\nimport { getConfig } from '../config';\nimport intersect from './intersect/index.js';\nimport createLabel from './createLabel';\nimport note from './shapes/note';\nimport { parseMember } from '../diagrams/class/svgDraw';\nimport { evaluate } from '../diagrams/common/common';\n\nconst question = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const s = w + h;\n  const points = [\n    { x: s / 2, y: 0 },\n    { x: s, y: -s / 2 },\n    { x: s / 2, y: -s },\n    { x: 0, y: -s / 2 },\n  ];\n\n  log.info('Question main (Circle)');\n\n  const questionElem = insertPolygonShape(shapeSvg, s, s, points);\n  questionElem.attr('style', node.style);\n  updateNodeBounds(node, questionElem);\n\n  node.intersect = function (point) {\n    log.warn('Intersect called');\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst choice = (parent, node) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n\n  const s = 28;\n  const points = [\n    { x: 0, y: s / 2 },\n    { x: s / 2, y: 0 },\n    { x: 0, y: -s / 2 },\n    { x: -s / 2, y: 0 },\n  ];\n\n  const choice = shapeSvg.insert('polygon', ':first-child').attr(\n    'points',\n    points\n      .map(function (d) {\n        return d.x + ',' + d.y;\n      })\n      .join(' ')\n  );\n  // center the circle around its coordinate\n  choice.attr('class', 'state-start').attr('r', 7).attr('width', 28).attr('height', 28);\n  node.width = 28;\n  node.height = 28;\n\n  node.intersect = function (point) {\n    return intersect.circle(node, 14, point);\n  };\n\n  return shapeSvg;\n};\n\nconst hexagon = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const f = 4;\n  const h = bbox.height + node.padding;\n  const m = h / f;\n  const w = bbox.width + 2 * m + node.padding;\n  const points = [\n    { x: m, y: 0 },\n    { x: w - m, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w - m, y: -h },\n    { x: m, y: -h },\n    { x: 0, y: -h / 2 },\n  ];\n\n  const hex = insertPolygonShape(shapeSvg, w, h, points);\n  hex.attr('style', node.style);\n  updateNodeBounds(node, hex);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst rect_left_inv_arrow = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: -h / 2, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: -h / 2, y: -h },\n    { x: 0, y: -h / 2 },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n\n  node.width = w + h;\n  node.height = h;\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst lean_right = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: (-2 * h) / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: -h },\n    { x: h / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst lean_left = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: (2 * h) / 6, y: 0 },\n    { x: w + h / 6, y: 0 },\n    { x: w - (2 * h) / 6, y: -h },\n    { x: -h / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst trapezoid = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: (-2 * h) / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: 0 },\n    { x: w - h / 6, y: -h },\n    { x: h / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst inv_trapezoid = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: -h },\n    { x: (-2 * h) / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst rect_right_inv_arrow = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w + h / 2, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w + h / 2, y: -h },\n    { x: 0, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst cylinder = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const rx = w / 2;\n  const ry = rx / (2.5 + w / 50);\n  const h = bbox.height + ry + node.padding;\n\n  const shape =\n    'M 0,' +\n    ry +\n    ' a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    w +\n    ' 0 a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    -w +\n    ' 0 l 0,' +\n    h +\n    ' a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    w +\n    ' 0 l 0,' +\n    -h;\n\n  const el = shapeSvg\n    .attr('label-offset-y', ry)\n    .insert('path', ':first-child')\n    .attr('style', node.style)\n    .attr('d', shape)\n    .attr('transform', 'translate(' + -w / 2 + ',' + -(h / 2 + ry) + ')');\n\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    const pos = intersect.rect(node, point);\n    const x = pos.x - node.x;\n\n    if (\n      rx != 0 &&\n      (Math.abs(x) < node.width / 2 ||\n        (Math.abs(x) == node.width / 2 && Math.abs(pos.y - node.y) > node.height / 2 - ry))\n    ) {\n      // ellipsis equation: x*x / a*a + y*y / b*b = 1\n      // solve for y to get adjusted value for pos.y\n      let y = ry * ry * (1 - (x * x) / (rx * rx));\n      if (y != 0) {\n        y = Math.sqrt(y);\n      }\n      y = ry - y;\n      if (point.y - node.y > 0) {\n        y = -y;\n      }\n\n      pos.y += y;\n    }\n\n    return pos;\n  };\n\n  return shapeSvg;\n};\n\nconst rect = (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, 'node ' + node.classes, true);\n\n  // add the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n\n  // const totalWidth = bbox.width + node.padding * 2;\n  // const totalHeight = bbox.height + node.padding * 2;\n  const totalWidth = bbox.width + node.padding;\n  const totalHeight = bbox.height + node.padding;\n  rect\n    .attr('class', 'basic label-container')\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    // .attr('x', -bbox.width / 2 - node.padding)\n    // .attr('y', -bbox.height / 2 - node.padding)\n    .attr('x', -bbox.width / 2 - halfPadding)\n    .attr('y', -bbox.height / 2 - halfPadding)\n    .attr('width', totalWidth)\n    .attr('height', totalHeight);\n\n  if (node.props) {\n    const propKeys = new Set(Object.keys(node.props));\n    if (node.props.borders) {\n      applyNodePropertyBorders(rect, node.props.borders, totalWidth, totalHeight);\n      propKeys.delete('borders');\n    }\n    propKeys.forEach((propKey) => {\n      log.warn(`Unknown node property ${propKey}`);\n    });\n  }\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst labelRect = (parent, node) => {\n  const { shapeSvg } = labelHelper(parent, node, 'label', true);\n\n  log.trace('Classes = ', node.classes);\n  // add the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n\n  // Hide the rect we are only after the label\n  const totalWidth = 0;\n  const totalHeight = 0;\n  rect.attr('width', totalWidth).attr('height', totalHeight);\n  shapeSvg.attr('class', 'label edgeLabel');\n\n  if (node.props) {\n    const propKeys = new Set(Object.keys(node.props));\n    if (node.props.borders) {\n      applyNodePropertyBorders(rect, node.props.borders, totalWidth, totalHeight);\n      propKeys.delete('borders');\n    }\n    propKeys.forEach((propKey) => {\n      log.warn(`Unknown node property ${propKey}`);\n    });\n  }\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\n/**\n * @param rect\n * @param borders\n * @param totalWidth\n * @param totalHeight\n */\nfunction applyNodePropertyBorders(rect, borders, totalWidth, totalHeight) {\n  const strokeDashArray = [];\n  const addBorder = (length) => {\n    strokeDashArray.push(length, 0);\n  };\n  const skipBorder = (length) => {\n    strokeDashArray.push(0, length);\n  };\n  if (borders.includes('t')) {\n    log.debug('add top border');\n    addBorder(totalWidth);\n  } else {\n    skipBorder(totalWidth);\n  }\n  if (borders.includes('r')) {\n    log.debug('add right border');\n    addBorder(totalHeight);\n  } else {\n    skipBorder(totalHeight);\n  }\n  if (borders.includes('b')) {\n    log.debug('add bottom border');\n    addBorder(totalWidth);\n  } else {\n    skipBorder(totalWidth);\n  }\n  if (borders.includes('l')) {\n    log.debug('add left border');\n    addBorder(totalHeight);\n  } else {\n    skipBorder(totalHeight);\n  }\n  rect.attr('stroke-dasharray', strokeDashArray.join(' '));\n}\n\nconst rectWithTitle = (parent, node) => {\n  // const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, 'node ' + node.classes);\n\n  let classes;\n  if (!node.classes) {\n    classes = 'node default';\n  } else {\n    classes = 'node ' + node.classes;\n  }\n  // Add outer g element\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', classes)\n    .attr('id', node.domId || node.id);\n\n  // Create the title label and insert it after the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n  // const innerRect = shapeSvg.insert('rect');\n  const innerLine = shapeSvg.insert('line');\n\n  const label = shapeSvg.insert('g').attr('class', 'label');\n\n  const text2 = node.labelText.flat ? node.labelText.flat() : node.labelText;\n  // const text2 = typeof text2prim === 'object' ? text2prim[0] : text2prim;\n\n  let title = '';\n  if (typeof text2 === 'object') {\n    title = text2[0];\n  } else {\n    title = text2;\n  }\n  log.info('Label text abc79', title, text2, typeof text2 === 'object');\n\n  const text = label.node().appendChild(createLabel(title, node.labelStyle, true, true));\n  let bbox = { width: 0, height: 0 };\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n  log.info('Text 2', text2);\n  const textRows = text2.slice(1, text2.length);\n  let titleBox = text.getBBox();\n  const descr = label\n    .node()\n    .appendChild(\n      createLabel(textRows.join ? textRows.join('<br/>') : textRows, node.labelStyle, true, true)\n    );\n\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = descr.children[0];\n    const dv = select(descr);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n  // bbox = label.getBBox();\n  // log.info(descr);\n  const halfPadding = node.padding / 2;\n  select(descr).attr(\n    'transform',\n    'translate( ' +\n      // (titleBox.width - bbox.width) / 2 +\n      (bbox.width > titleBox.width ? 0 : (titleBox.width - bbox.width) / 2) +\n      ', ' +\n      (titleBox.height + halfPadding + 5) +\n      ')'\n  );\n  select(text).attr(\n    'transform',\n    'translate( ' +\n      // (titleBox.width - bbox.width) / 2 +\n      (bbox.width < titleBox.width ? 0 : -(titleBox.width - bbox.width) / 2) +\n      ', ' +\n      0 +\n      ')'\n  );\n  // Get the size of the label\n\n  // Bounding box for title and text\n  bbox = label.node().getBBox();\n\n  // Center the label\n  label.attr(\n    'transform',\n    'translate(' + -bbox.width / 2 + ', ' + (-bbox.height / 2 - halfPadding + 3) + ')'\n  );\n\n  rect\n    .attr('class', 'outer title-state')\n    .attr('x', -bbox.width / 2 - halfPadding)\n    .attr('y', -bbox.height / 2 - halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  innerLine\n    .attr('class', 'divider')\n    .attr('x1', -bbox.width / 2 - halfPadding)\n    .attr('x2', bbox.width / 2 + halfPadding)\n    .attr('y1', -bbox.height / 2 - halfPadding + titleBox.height + halfPadding)\n    .attr('y2', -bbox.height / 2 - halfPadding + titleBox.height + halfPadding);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst stadium = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const h = bbox.height + node.padding;\n  const w = bbox.width + h / 4 + node.padding;\n\n  // add the rect\n  const rect = shapeSvg\n    .insert('rect', ':first-child')\n    .attr('style', node.style)\n    .attr('rx', h / 2)\n    .attr('ry', h / 2)\n    .attr('x', -w / 2)\n    .attr('y', -h / 2)\n    .attr('width', w)\n    .attr('height', h);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst circle = (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, undefined, true);\n  const circle = shapeSvg.insert('circle', ':first-child');\n\n  // center the circle around its coordinate\n  circle\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('r', bbox.width / 2 + halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  log.info('Circle main');\n\n  updateNodeBounds(node, circle);\n\n  node.intersect = function (point) {\n    log.info('Circle intersect', node, bbox.width / 2 + halfPadding, point);\n    return intersect.circle(node, bbox.width / 2 + halfPadding, point);\n  };\n\n  return shapeSvg;\n};\n\nconst doublecircle = (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, undefined, true);\n  const gap = 5;\n  const circleGroup = shapeSvg.insert('g', ':first-child');\n  const outerCircle = circleGroup.insert('circle');\n  const innerCircle = circleGroup.insert('circle');\n\n  // center the circle around its coordinate\n  outerCircle\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('r', bbox.width / 2 + halfPadding + gap)\n    .attr('width', bbox.width + node.padding + gap * 2)\n    .attr('height', bbox.height + node.padding + gap * 2);\n\n  innerCircle\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('r', bbox.width / 2 + halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  log.info('DoubleCircle main');\n\n  updateNodeBounds(node, outerCircle);\n\n  node.intersect = function (point) {\n    log.info('DoubleCircle intersect', node, bbox.width / 2 + halfPadding + gap, point);\n    return intersect.circle(node, bbox.width / 2 + halfPadding + gap, point);\n  };\n\n  return shapeSvg;\n};\n\nconst subroutine = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: 0, y: -h },\n    { x: 0, y: 0 },\n    { x: -8, y: 0 },\n    { x: w + 8, y: 0 },\n    { x: w + 8, y: -h },\n    { x: -8, y: -h },\n    { x: -8, y: 0 },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst start = (parent, node) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n  const circle = shapeSvg.insert('circle', ':first-child');\n\n  // center the circle around its coordinate\n  circle.attr('class', 'state-start').attr('r', 7).attr('width', 14).attr('height', 14);\n\n  updateNodeBounds(node, circle);\n\n  node.intersect = function (point) {\n    return intersect.circle(node, 7, point);\n  };\n\n  return shapeSvg;\n};\n\nconst forkJoin = (parent, node, dir) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n\n  let width = 70;\n  let height = 10;\n\n  if (dir === 'LR') {\n    width = 10;\n    height = 70;\n  }\n\n  const shape = shapeSvg\n    .append('rect')\n    .attr('x', (-1 * width) / 2)\n    .attr('y', (-1 * height) / 2)\n    .attr('width', width)\n    .attr('height', height)\n    .attr('class', 'fork-join');\n\n  updateNodeBounds(node, shape);\n  node.height = node.height + node.padding / 2;\n  node.width = node.width + node.padding / 2;\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst end = (parent, node) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n  const innerCircle = shapeSvg.insert('circle', ':first-child');\n  const circle = shapeSvg.insert('circle', ':first-child');\n\n  circle.attr('class', 'state-start').attr('r', 7).attr('width', 14).attr('height', 14);\n\n  innerCircle.attr('class', 'state-end').attr('r', 5).attr('width', 10).attr('height', 10);\n\n  updateNodeBounds(node, circle);\n\n  node.intersect = function (point) {\n    return intersect.circle(node, 7, point);\n  };\n\n  return shapeSvg;\n};\n\nconst class_box = (parent, node) => {\n  const halfPadding = node.padding / 2;\n  const rowPadding = 4;\n  const lineHeight = 8;\n\n  let classes;\n  if (!node.classes) {\n    classes = 'node default';\n  } else {\n    classes = 'node ' + node.classes;\n  }\n  // Add outer g element\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', classes)\n    .attr('id', node.domId || node.id);\n\n  // Create the title label and insert it after the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n  const topLine = shapeSvg.insert('line');\n  const bottomLine = shapeSvg.insert('line');\n  let maxWidth = 0;\n  let maxHeight = rowPadding;\n\n  const labelContainer = shapeSvg.insert('g').attr('class', 'label');\n  let verticalPos = 0;\n  const hasInterface = node.classData.annotations && node.classData.annotations[0];\n\n  // 1. Create the labels\n  const interfaceLabelText = node.classData.annotations[0]\n    ? '«' + node.classData.annotations[0] + '»'\n    : '';\n  const interfaceLabel = labelContainer\n    .node()\n    .appendChild(createLabel(interfaceLabelText, node.labelStyle, true, true));\n  let interfaceBBox = interfaceLabel.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = interfaceLabel.children[0];\n    const dv = select(interfaceLabel);\n    interfaceBBox = div.getBoundingClientRect();\n    dv.attr('width', interfaceBBox.width);\n    dv.attr('height', interfaceBBox.height);\n  }\n  if (node.classData.annotations[0]) {\n    maxHeight += interfaceBBox.height + rowPadding;\n    maxWidth += interfaceBBox.width;\n  }\n\n  let classTitleString = node.classData.label;\n\n  if (node.classData.type !== undefined && node.classData.type !== '') {\n    if (getConfig().flowchart.htmlLabels) {\n      classTitleString += '&lt;' + node.classData.type + '&gt;';\n    } else {\n      classTitleString += '<' + node.classData.type + '>';\n    }\n  }\n  const classTitleLabel = labelContainer\n    .node()\n    .appendChild(createLabel(classTitleString, node.labelStyle, true, true));\n  select(classTitleLabel).attr('class', 'classTitle');\n  let classTitleBBox = classTitleLabel.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = classTitleLabel.children[0];\n    const dv = select(classTitleLabel);\n    classTitleBBox = div.getBoundingClientRect();\n    dv.attr('width', classTitleBBox.width);\n    dv.attr('height', classTitleBBox.height);\n  }\n  maxHeight += classTitleBBox.height + rowPadding;\n  if (classTitleBBox.width > maxWidth) {\n    maxWidth = classTitleBBox.width;\n  }\n  const classAttributes = [];\n  node.classData.members.forEach((str) => {\n    const parsedInfo = parseMember(str);\n    let parsedText = parsedInfo.displayText;\n    if (getConfig().flowchart.htmlLabels) {\n      parsedText = parsedText.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    }\n    const lbl = labelContainer\n      .node()\n      .appendChild(\n        createLabel(\n          parsedText,\n          parsedInfo.cssStyle ? parsedInfo.cssStyle : node.labelStyle,\n          true,\n          true\n        )\n      );\n    let bbox = lbl.getBBox();\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      const div = lbl.children[0];\n      const dv = select(lbl);\n      bbox = div.getBoundingClientRect();\n      dv.attr('width', bbox.width);\n      dv.attr('height', bbox.height);\n    }\n    if (bbox.width > maxWidth) {\n      maxWidth = bbox.width;\n    }\n    maxHeight += bbox.height + rowPadding;\n    classAttributes.push(lbl);\n  });\n\n  maxHeight += lineHeight;\n\n  const classMethods = [];\n  node.classData.methods.forEach((str) => {\n    const parsedInfo = parseMember(str);\n    let displayText = parsedInfo.displayText;\n    if (getConfig().flowchart.htmlLabels) {\n      displayText = displayText.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    }\n    const lbl = labelContainer\n      .node()\n      .appendChild(\n        createLabel(\n          displayText,\n          parsedInfo.cssStyle ? parsedInfo.cssStyle : node.labelStyle,\n          true,\n          true\n        )\n      );\n    let bbox = lbl.getBBox();\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      const div = lbl.children[0];\n      const dv = select(lbl);\n      bbox = div.getBoundingClientRect();\n      dv.attr('width', bbox.width);\n      dv.attr('height', bbox.height);\n    }\n    if (bbox.width > maxWidth) {\n      maxWidth = bbox.width;\n    }\n    maxHeight += bbox.height + rowPadding;\n\n    classMethods.push(lbl);\n  });\n\n  maxHeight += lineHeight;\n\n  // 2. Position the labels\n\n  // position the interface label\n  if (hasInterface) {\n    let diffX = (maxWidth - interfaceBBox.width) / 2;\n    select(interfaceLabel).attr(\n      'transform',\n      'translate( ' + ((-1 * maxWidth) / 2 + diffX) + ', ' + (-1 * maxHeight) / 2 + ')'\n    );\n    verticalPos = interfaceBBox.height + rowPadding;\n  }\n  // Position the class title label\n  let diffX = (maxWidth - classTitleBBox.width) / 2;\n  select(classTitleLabel).attr(\n    'transform',\n    'translate( ' +\n      ((-1 * maxWidth) / 2 + diffX) +\n      ', ' +\n      ((-1 * maxHeight) / 2 + verticalPos) +\n      ')'\n  );\n  verticalPos += classTitleBBox.height + rowPadding;\n\n  topLine\n    .attr('class', 'divider')\n    .attr('x1', -maxWidth / 2 - halfPadding)\n    .attr('x2', maxWidth / 2 + halfPadding)\n    .attr('y1', -maxHeight / 2 - halfPadding + lineHeight + verticalPos)\n    .attr('y2', -maxHeight / 2 - halfPadding + lineHeight + verticalPos);\n\n  verticalPos += lineHeight;\n\n  classAttributes.forEach((lbl) => {\n    select(lbl).attr(\n      'transform',\n      'translate( ' +\n        -maxWidth / 2 +\n        ', ' +\n        ((-1 * maxHeight) / 2 + verticalPos + lineHeight / 2) +\n        ')'\n    );\n    verticalPos += classTitleBBox.height + rowPadding;\n  });\n\n  verticalPos += lineHeight;\n  bottomLine\n    .attr('class', 'divider')\n    .attr('x1', -maxWidth / 2 - halfPadding)\n    .attr('x2', maxWidth / 2 + halfPadding)\n    .attr('y1', -maxHeight / 2 - halfPadding + lineHeight + verticalPos)\n    .attr('y2', -maxHeight / 2 - halfPadding + lineHeight + verticalPos);\n\n  verticalPos += lineHeight;\n\n  classMethods.forEach((lbl) => {\n    select(lbl).attr(\n      'transform',\n      'translate( ' + -maxWidth / 2 + ', ' + ((-1 * maxHeight) / 2 + verticalPos) + ')'\n    );\n    verticalPos += classTitleBBox.height + rowPadding;\n  });\n\n  rect\n    .attr('class', 'outer title-state')\n    .attr('x', -maxWidth / 2 - halfPadding)\n    .attr('y', -(maxHeight / 2) - halfPadding)\n    .attr('width', maxWidth + node.padding)\n    .attr('height', maxHeight + node.padding);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst shapes = {\n  rhombus: question,\n  question,\n  rect,\n  labelRect,\n  rectWithTitle,\n  choice,\n  circle,\n  doublecircle,\n  stadium,\n  hexagon,\n  rect_left_inv_arrow,\n  lean_right,\n  lean_left,\n  trapezoid,\n  inv_trapezoid,\n  rect_right_inv_arrow,\n  cylinder,\n  start,\n  end,\n  note,\n  subroutine,\n  fork: forkJoin,\n  join: forkJoin,\n  class_box,\n};\n\nlet nodeElems = {};\n\nexport const insertNode = (elem, node, dir) => {\n  let newEl;\n  let el;\n\n  // Add link when appropriate\n  if (node.link) {\n    let target;\n    if (getConfig().securityLevel === 'sandbox') {\n      target = '_top';\n    } else if (node.linkTarget) {\n      target = node.linkTarget || '_blank';\n    }\n    newEl = elem.insert('svg:a').attr('xlink:href', node.link).attr('target', target);\n    el = shapes[node.shape](newEl, node, dir);\n  } else {\n    el = shapes[node.shape](elem, node, dir);\n    newEl = el;\n  }\n  if (node.tooltip) {\n    el.attr('title', node.tooltip);\n  }\n  if (node.class) {\n    el.attr('class', 'node default ' + node.class);\n  }\n\n  nodeElems[node.id] = newEl;\n\n  if (node.haveCallback) {\n    nodeElems[node.id].attr('class', nodeElems[node.id].attr('class') + ' clickable');\n  }\n  return newEl;\n};\nexport const setNodeElem = (elem, node) => {\n  nodeElems[node.id] = elem;\n};\nexport const clear = () => {\n  nodeElems = {};\n};\n\nexport const positionNode = (node) => {\n  const el = nodeElems[node.id];\n  log.trace(\n    'Transforming node',\n    node.diff,\n    node,\n    'translate(' + (node.x - node.width / 2 - 5) + ', ' + node.width / 2 + ')'\n  );\n  const padding = 8;\n  const diff = node.diff || 0;\n  if (node.clusterNode) {\n    el.attr(\n      'transform',\n      'translate(' +\n        (node.x + diff - node.width / 2) +\n        ', ' +\n        (node.y - node.height / 2 - padding) +\n        ')'\n    );\n  } else {\n    el.attr('transform', 'translate(' + node.x + ', ' + node.y + ')');\n  }\n  return diff;\n};\n","import { updateNodeBounds, labelHelper } from './util';\nimport { log } from '../../logger';\nimport { getConfig } from '../../config';\nimport intersect from '../intersect/index.js';\n\nconst note = (parent, node) => {\n  const useHtmlLabels = node.useHtmlLabels || getConfig().flowchart.htmlLabels;\n  if (!useHtmlLabels) {\n    node.centerLabel = true;\n  }\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, 'node ' + node.classes, true);\n\n  log.info('Classes = ', node.classes);\n  // add the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n\n  rect\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('x', -bbox.width / 2 - halfPadding)\n    .attr('y', -bbox.height / 2 - halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nexport default note;\n","import { log } from '../logger';\nimport createLabel from './createLabel';\nimport { createText } from '../rendering-util/createText';\nimport { line, curveBasis, select } from 'd3';\nimport { getConfig } from '../config';\nimport utils from '../utils';\nimport { evaluate } from '../diagrams/common/common';\n\nlet edgeLabels = {};\nlet terminalLabels = {};\n\nexport const clear = () => {\n  edgeLabels = {};\n  terminalLabels = {};\n};\n\nexport const insertEdgeLabel = (elem, edge) => {\n  const useHtmlLabels = evaluate(getConfig().flowchart.htmlLabels);\n  // Create the actual text element\n  const labelElement =\n    edge.labelType === 'markdown'\n      ? createText(elem, edge.label, {\n          style: edge.labelStyle,\n          useHtmlLabels,\n          addSvgBackground: true,\n        })\n      : createLabel(edge.label, edge.labelStyle);\n  log.info('abc82', edge, edge.labelType);\n\n  // Create outer g, edgeLabel, this will be positioned after graph layout\n  const edgeLabel = elem.insert('g').attr('class', 'edgeLabel');\n\n  // Create inner g, label, this will be positioned now for centering the text\n  const label = edgeLabel.insert('g').attr('class', 'label');\n  label.node().appendChild(labelElement);\n\n  // Center the label\n  let bbox = labelElement.getBBox();\n  if (useHtmlLabels) {\n    const div = labelElement.children[0];\n    const dv = select(labelElement);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n  label.attr('transform', 'translate(' + -bbox.width / 2 + ', ' + -bbox.height / 2 + ')');\n\n  // Make element accessible by id for positioning\n  edgeLabels[edge.id] = edgeLabel;\n\n  // Update the abstract data of the edge with the new information about its width and height\n  edge.width = bbox.width;\n  edge.height = bbox.height;\n\n  let fo;\n  if (edge.startLabelLeft) {\n    // Create the actual text element\n    const startLabelElement = createLabel(edge.startLabelLeft, edge.labelStyle);\n    const startEdgeLabelLeft = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = startEdgeLabelLeft.insert('g').attr('class', 'inner');\n    fo = inner.node().appendChild(startLabelElement);\n    const slBox = startLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].startLeft = startEdgeLabelLeft;\n    setTerminalWidth(fo, edge.startLabelLeft);\n  }\n  if (edge.startLabelRight) {\n    // Create the actual text element\n    const startLabelElement = createLabel(edge.startLabelRight, edge.labelStyle);\n    const startEdgeLabelRight = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = startEdgeLabelRight.insert('g').attr('class', 'inner');\n    fo = startEdgeLabelRight.node().appendChild(startLabelElement);\n    inner.node().appendChild(startLabelElement);\n    const slBox = startLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].startRight = startEdgeLabelRight;\n    setTerminalWidth(fo, edge.startLabelRight);\n  }\n  if (edge.endLabelLeft) {\n    // Create the actual text element\n    const endLabelElement = createLabel(edge.endLabelLeft, edge.labelStyle);\n    const endEdgeLabelLeft = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = endEdgeLabelLeft.insert('g').attr('class', 'inner');\n    fo = inner.node().appendChild(endLabelElement);\n    const slBox = endLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n\n    endEdgeLabelLeft.node().appendChild(endLabelElement);\n\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].endLeft = endEdgeLabelLeft;\n    setTerminalWidth(fo, edge.endLabelLeft);\n  }\n  if (edge.endLabelRight) {\n    // Create the actual text element\n    const endLabelElement = createLabel(edge.endLabelRight, edge.labelStyle);\n    const endEdgeLabelRight = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = endEdgeLabelRight.insert('g').attr('class', 'inner');\n\n    fo = inner.node().appendChild(endLabelElement);\n    const slBox = endLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n\n    endEdgeLabelRight.node().appendChild(endLabelElement);\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].endRight = endEdgeLabelRight;\n    setTerminalWidth(fo, edge.endLabelRight);\n  }\n  return labelElement;\n};\n\n/**\n * @param {any} fo\n * @param {any} value\n */\nfunction setTerminalWidth(fo, value) {\n  if (getConfig().flowchart.htmlLabels && fo) {\n    fo.style.width = value.length * 9 + 'px';\n    fo.style.height = '12px';\n  }\n}\n\nexport const positionEdgeLabel = (edge, paths) => {\n  log.info('Moving label abc78 ', edge.id, edge.label, edgeLabels[edge.id]);\n  let path = paths.updatedPath ? paths.updatedPath : paths.originalPath;\n  if (edge.label) {\n    const el = edgeLabels[edge.id];\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      //   // debugger;\n      const pos = utils.calcLabelPosition(path);\n      log.info(\n        'Moving label ' + edge.label + ' from (',\n        x,\n        ',',\n        y,\n        ') to (',\n        pos.x,\n        ',',\n        pos.y,\n        ') abc78'\n      );\n      if (paths.updatedPath) {\n        x = pos.x;\n        y = pos.y;\n      }\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n\n  //let path = paths.updatedPath ? paths.updatedPath : paths.originalPath;\n  if (edge.startLabelLeft) {\n    const el = terminalLabels[edge.id].startLeft;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeStart ? 10 : 0, 'start_left', path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n  if (edge.startLabelRight) {\n    const el = terminalLabels[edge.id].startRight;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(\n        edge.arrowTypeStart ? 10 : 0,\n        'start_right',\n        path\n      );\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n  if (edge.endLabelLeft) {\n    const el = terminalLabels[edge.id].endLeft;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeEnd ? 10 : 0, 'end_left', path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n  if (edge.endLabelRight) {\n    const el = terminalLabels[edge.id].endRight;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeEnd ? 10 : 0, 'end_right', path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n};\n\nconst outsideNode = (node, point) => {\n  // log.warn('Checking bounds ', node, point);\n  const x = node.x;\n  const y = node.y;\n  const dx = Math.abs(point.x - x);\n  const dy = Math.abs(point.y - y);\n  const w = node.width / 2;\n  const h = node.height / 2;\n  if (dx >= w || dy >= h) {\n    return true;\n  }\n  return false;\n};\n\nexport const intersection = (node, outsidePoint, insidePoint) => {\n  log.warn(`intersection calc abc89:\n  outsidePoint: ${JSON.stringify(outsidePoint)}\n  insidePoint : ${JSON.stringify(insidePoint)}\n  node        : x:${node.x} y:${node.y} w:${node.width} h:${node.height}`);\n  const x = node.x;\n  const y = node.y;\n\n  const dx = Math.abs(x - insidePoint.x);\n  // const dy = Math.abs(y - insidePoint.y);\n  const w = node.width / 2;\n  let r = insidePoint.x < outsidePoint.x ? w - dx : w + dx;\n  const h = node.height / 2;\n\n  // const edges = {\n  //   x1: x - w,\n  //   x2: x + w,\n  //   y1: y - h,\n  //   y2: y + h\n  // };\n\n  // if (\n  //   outsidePoint.x === edges.x1 ||\n  //   outsidePoint.x === edges.x2 ||\n  //   outsidePoint.y === edges.y1 ||\n  //   outsidePoint.y === edges.y2\n  // ) {\n  //   log.warn('abc89 calc equals on edge', outsidePoint, edges);\n  //   return outsidePoint;\n  // }\n\n  const Q = Math.abs(outsidePoint.y - insidePoint.y);\n  const R = Math.abs(outsidePoint.x - insidePoint.x);\n  // log.warn();\n  if (Math.abs(y - outsidePoint.y) * w > Math.abs(x - outsidePoint.x) * h) {\n    // Intersection is top or bottom of rect.\n    // let q = insidePoint.y < outsidePoint.y ? outsidePoint.y - h - y : y - h - outsidePoint.y;\n    let q = insidePoint.y < outsidePoint.y ? outsidePoint.y - h - y : y - h - outsidePoint.y;\n    r = (R * q) / Q;\n    const res = {\n      x: insidePoint.x < outsidePoint.x ? insidePoint.x + r : insidePoint.x - R + r,\n      y: insidePoint.y < outsidePoint.y ? insidePoint.y + Q - q : insidePoint.y - Q + q,\n    };\n\n    if (r === 0) {\n      res.x = outsidePoint.x;\n      res.y = outsidePoint.y;\n    }\n    if (R === 0) {\n      res.x = outsidePoint.x;\n    }\n    if (Q === 0) {\n      res.y = outsidePoint.y;\n    }\n\n    log.warn(`abc89 topp/bott calc, Q ${Q}, q ${q}, R ${R}, r ${r}`, res);\n\n    return res;\n  } else {\n    // Intersection onn sides of rect\n    if (insidePoint.x < outsidePoint.x) {\n      r = outsidePoint.x - w - x;\n    } else {\n      // r = outsidePoint.x - w - x;\n      r = x - w - outsidePoint.x;\n    }\n    let q = (Q * r) / R;\n    //  OK let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : insidePoint.x + dx - w;\n    // OK let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : outsidePoint.x + r;\n    let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : insidePoint.x - R + r;\n    // let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : outsidePoint.x + r;\n    let _y = insidePoint.y < outsidePoint.y ? insidePoint.y + q : insidePoint.y - q;\n    log.warn(`sides calc abc89, Q ${Q}, q ${q}, R ${R}, r ${r}`, { _x, _y });\n    if (r === 0) {\n      _x = outsidePoint.x;\n      _y = outsidePoint.y;\n    }\n    if (R === 0) {\n      _x = outsidePoint.x;\n    }\n    if (Q === 0) {\n      _y = outsidePoint.y;\n    }\n\n    return { x: _x, y: _y };\n  }\n};\n/**\n * This function will page a path and node where the last point(s) in the path is inside the node\n * and return an update path ending by the border of the node.\n *\n * @param {Array} _points\n * @param {any} boundryNode\n * @returns {Array} Points\n */\nconst cutPathAtIntersect = (_points, boundryNode) => {\n  log.warn('abc88 cutPathAtIntersect', _points, boundryNode);\n  let points = [];\n  let lastPointOutside = _points[0];\n  let isInside = false;\n  _points.forEach((point) => {\n    // const node = clusterDb[edge.toCluster].node;\n    log.info('abc88 checking point', point, boundryNode);\n\n    // check if point is inside the boundary rect\n    if (!outsideNode(boundryNode, point) && !isInside) {\n      // First point inside the rect found\n      // Calc the intersection coord between the point anf the last point outside the rect\n      const inter = intersection(boundryNode, lastPointOutside, point);\n      log.warn('abc88 inside', point, lastPointOutside, inter);\n      log.warn('abc88 intersection', inter);\n\n      // // Check case where the intersection is the same as the last point\n      let pointPresent = false;\n      points.forEach((p) => {\n        pointPresent = pointPresent || (p.x === inter.x && p.y === inter.y);\n      });\n      // // if (!pointPresent) {\n      if (!points.some((e) => e.x === inter.x && e.y === inter.y)) {\n        points.push(inter);\n      } else {\n        log.warn('abc88 no intersect', inter, points);\n      }\n      // points.push(inter);\n      isInside = true;\n    } else {\n      // Outside\n      log.warn('abc88 outside', point, lastPointOutside);\n      lastPointOutside = point;\n      // points.push(point);\n      if (!isInside) {\n        points.push(point);\n      }\n    }\n  });\n  log.warn('abc88 returning points', points);\n  return points;\n};\n\n//(edgePaths, e, edge, clusterDb, diagramtype, graph)\nexport const insertEdge = function (elem, e, edge, clusterDb, diagramType, graph) {\n  let points = edge.points;\n  let pointsHasChanged = false;\n  const tail = graph.node(e.v);\n  var head = graph.node(e.w);\n\n  log.info('abc88 InsertEdge: ', edge);\n  if (head.intersect && tail.intersect) {\n    points = points.slice(1, edge.points.length - 1);\n    points.unshift(tail.intersect(points[0]));\n    log.info(\n      'Last point',\n      points[points.length - 1],\n      head,\n      head.intersect(points[points.length - 1])\n    );\n    points.push(head.intersect(points[points.length - 1]));\n  }\n  if (edge.toCluster) {\n    log.info('to cluster abc88', clusterDb[edge.toCluster]);\n    points = cutPathAtIntersect(edge.points, clusterDb[edge.toCluster].node);\n    // log.trace('edge', edge);\n    // points = [];\n    // let lastPointOutside; // = edge.points[0];\n    // let isInside = false;\n    // edge.points.forEach(point => {\n    //   const node = clusterDb[edge.toCluster].node;\n    //   log.warn('checking from', edge.fromCluster, point, node);\n\n    //   if (!outsideNode(node, point) && !isInside) {\n    //     log.trace('inside', edge.toCluster, point, lastPointOutside);\n\n    //     // First point inside the rect\n    //     const inter = intersection(node, lastPointOutside, point);\n\n    //     let pointPresent = false;\n    //     points.forEach(p => {\n    //       pointPresent = pointPresent || (p.x === inter.x && p.y === inter.y);\n    //     });\n    //     // if (!pointPresent) {\n    //     if (!points.find(e => e.x === inter.x && e.y === inter.y)) {\n    //       points.push(inter);\n    //     } else {\n    //       log.warn('no intersect', inter, points);\n    //     }\n    //     isInside = true;\n    // } else {\n    //   // outside\n    //   lastPointOutside = point;\n    //   if (!isInside) points.push(point);\n    // }\n    // });\n    pointsHasChanged = true;\n  }\n\n  if (edge.fromCluster) {\n    log.info('from cluster abc88', clusterDb[edge.fromCluster]);\n    points = cutPathAtIntersect(points.reverse(), clusterDb[edge.fromCluster].node).reverse();\n\n    pointsHasChanged = true;\n  }\n\n  // The data for our line\n  const lineData = points.filter((p) => !Number.isNaN(p.y));\n\n  // This is the accessor function we talked about above\n  let curve;\n  // Currently only flowcharts get the curve from the settings, perhaps this should\n  // be expanded to a common setting? Restricting it for now in order not to cause side-effects that\n  // have not been thought through\n  if (diagramType === 'graph' || diagramType === 'flowchart') {\n    curve = edge.curve || curveBasis;\n  } else {\n    curve = curveBasis;\n  }\n  // curve = curveLinear;\n  const lineFunction = line()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    })\n    .curve(curve);\n\n  // Construct stroke classes based on properties\n  let strokeClasses;\n  switch (edge.thickness) {\n    case 'normal':\n      strokeClasses = 'edge-thickness-normal';\n      break;\n    case 'thick':\n      strokeClasses = 'edge-thickness-thick';\n      break;\n    case 'invisible':\n      strokeClasses = 'edge-thickness-thick';\n      break;\n    default:\n      strokeClasses = '';\n  }\n  switch (edge.pattern) {\n    case 'solid':\n      strokeClasses += ' edge-pattern-solid';\n      break;\n    case 'dotted':\n      strokeClasses += ' edge-pattern-dotted';\n      break;\n    case 'dashed':\n      strokeClasses += ' edge-pattern-dashed';\n      break;\n  }\n\n  const svgPath = elem\n    .append('path')\n    .attr('d', lineFunction(lineData))\n    .attr('id', edge.id)\n    .attr('class', ' ' + strokeClasses + (edge.classes ? ' ' + edge.classes : ''))\n    .attr('style', edge.style);\n\n  // DEBUG code, adds a red circle at each edge coordinate\n  // edge.points.forEach((point) => {\n  //   elem\n  //     .append('circle')\n  //     .style('stroke', 'red')\n  //     .style('fill', 'red')\n  //     .attr('r', 1)\n  //     .attr('cx', point.x)\n  //     .attr('cy', point.y);\n  // });\n\n  let url = '';\n  // // TODO: Can we load this config only from the rendered graph type?\n  if (getConfig().flowchart.arrowMarkerAbsolute || getConfig().state.arrowMarkerAbsolute) {\n    url =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname +\n      window.location.search;\n    url = url.replace(/\\(/g, '\\\\(');\n    url = url.replace(/\\)/g, '\\\\)');\n  }\n  log.info('arrowTypeStart', edge.arrowTypeStart);\n  log.info('arrowTypeEnd', edge.arrowTypeEnd);\n\n  switch (edge.arrowTypeStart) {\n    case 'arrow_cross':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-crossStart' + ')');\n      break;\n    case 'arrow_point':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-pointStart' + ')');\n      break;\n    case 'arrow_barb':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-barbStart' + ')');\n      break;\n    case 'arrow_circle':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-circleStart' + ')');\n      break;\n    case 'aggregation':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-aggregationStart' + ')');\n      break;\n    case 'extension':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-extensionStart' + ')');\n      break;\n    case 'composition':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-compositionStart' + ')');\n      break;\n    case 'dependency':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-dependencyStart' + ')');\n      break;\n    case 'lollipop':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-lollipopStart' + ')');\n      break;\n    default:\n  }\n  switch (edge.arrowTypeEnd) {\n    case 'arrow_cross':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-crossEnd' + ')');\n      break;\n    case 'arrow_point':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-pointEnd' + ')');\n      break;\n    case 'arrow_barb':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-barbEnd' + ')');\n      break;\n    case 'arrow_circle':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-circleEnd' + ')');\n      break;\n    case 'aggregation':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-aggregationEnd' + ')');\n      break;\n    case 'extension':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-extensionEnd' + ')');\n      break;\n    case 'composition':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-compositionEnd' + ')');\n      break;\n    case 'dependency':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-dependencyEnd' + ')');\n      break;\n    case 'lollipop':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-lollipopEnd' + ')');\n      break;\n    default:\n  }\n  let paths = {};\n  if (pointsHasChanged) {\n    paths.updatedPath = points;\n  }\n  paths.originalPath = edge.points;\n  return paths;\n};\n"],"names":["$4afd9cb505735f67$var$markers","elem","type","id","$jmbVX","l","trace","append","attr","style","circle","$4afd9cb505735f67$export$407448d2b89b1813","markerArray","forEach","markerName","$4afd9cb505735f67$export$db3b6bfb95261072","_vertexText","isTitle","isNode","vertexText","k","g","flowchart","htmlLabels","replace","info","vertexNode","node","fo","$2YFJl","select","document","createElementNS","div","label","labelClass","dom","styleFn","html","labelStyle","$4afd9cb505735f67$var$addHtmlLabel","$eCa9q","d","s","svgLabel","setAttribute","rows","split","Array","isArray","row","tspan","setAttributeNS","textContent","trim","appendChild","$4afd9cb505735f67$export$882b5998b3b9117c","parent","_classes","classes","useHtmlLabels","shapeSvg","insert","domId","labelText","textNode","text","labelType","$gwjTY","c","b","width","wrappingWidth","createLabel","bbox","getBBox","children","dv","getBoundingClientRect","height","halfPadding","padding","centerLabel","$4afd9cb505735f67$export$3b14a55fb2447963","element","$4afd9cb505735f67$var$insertPolygonShape","w","h","points","map","x","y","join","$4afd9cb505735f67$var$intersectEllipse","rx","ry","point","cx","cy","px","py","det","Math","sqrt","dx","abs","dy","$4afd9cb505735f67$var$intersectLine","p1","p2","q1","q2","a1","a2","b1","b2","c1","c2","r1","r2","r3","r4","denom","offset","num","$4afd9cb505735f67$var$sameSign","$4afd9cb505735f67$export$23f2a1d2818174ef","sx","sy","$4afd9cb505735f67$var$intersect","intersect","ellipse","polygon","polyPoints","x1","y1","intersections","minX","Number","POSITIVE_INFINITY","minY","entry","min","left","top","i","length","push","sort","p","q","pdx","pdy","distp","qdx","qdy","distq","rect","$4afd9cb505735f67$var$question","questionElem","warn","$4afd9cb505735f67$var$applyNodePropertyBorders","borders","totalWidth","totalHeight","strokeDashArray","addBorder","skipBorder","includes","debug","$4afd9cb505735f67$var$forkJoin","dir","shape","$4afd9cb505735f67$var$shapes","rhombus","props","propKeys","Set","Object","keys","delete","propKey","innerLine","text2","flat","title","textRows","slice","titleBox","descr","circleGroup","outerCircle","innerCircle","gap","m","hex","el","pos","note","fork","topLine","bottomLine","maxWidth","maxHeight","labelContainer","verticalPos","hasInterface","classData","annotations","interfaceLabelText","interfaceLabel","interfaceBBox","classTitleString","classTitleLabel","classTitleBBox","classAttributes","members","str","parsedInfo","$eVRfl","parsedText","displayText","lbl","cssStyle","classMethods","methods","diffX","lineHeight","$4afd9cb505735f67$var$nodeElems","$4afd9cb505735f67$export$f1e1789686576879","newEl","link","target","securityLevel","linkTarget","tooltip","class","haveCallback","$4afd9cb505735f67$export$2408f22a0fab9ae5","clear","$4afd9cb505735f67$export$ffb5f4729a158638","diff","clusterNode","$4afd9cb505735f67$var$edgeLabels","$4afd9cb505735f67$var$terminalLabels","$4afd9cb505735f67$export$4368d992c4eafac0","$4afd9cb505735f67$export$2d1720544b23b823","edge","labelElement","addSvgBackground","edgeLabel","startLabelLeft","startLabelElement","startEdgeLabelLeft","inner","slBox","startLeft","$4afd9cb505735f67$var$setTerminalWidth","startLabelRight","startEdgeLabelRight","startRight","endLabelLeft","endLabelElement","endEdgeLabelLeft","endLeft","endLabelRight","endEdgeLabelRight","endRight","value","$4afd9cb505735f67$export$dda1d9f60106f0e9","paths","path","updatedPath","originalPath","$3IUvT","u","calcLabelPosition","calcTerminalLabelPosition","arrowTypeStart","arrowTypeEnd","$4afd9cb505735f67$var$cutPathAtIntersect","_points","boundryNode","lastPointOutside","isInside","$4afd9cb505735f67$var$outsideNode","inter","outsidePoint","insidePoint","JSON","stringify","r","Q","R","res","_x","_y","$4afd9cb505735f67$var$intersection","pointPresent","some","e","$4afd9cb505735f67$export$39b482c5e57630a8","clusterDb","diagramType","graph","pointsHasChanged","tail","v","head","unshift","toCluster","fromCluster","reverse","lineData","filter","isNaN","curve","curveBasis","lineFunction","line","strokeClasses","thickness","pattern","svgPath","url","arrowMarkerAbsolute","state","window","location","protocol","host","pathname","search"],"version":3,"file":"flowDiagram-46a15f6f.5b745cca.js.map"}